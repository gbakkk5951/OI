推gal自动机

[题目描述]
小X是一个沉迷galgame的死宅。
有一天他在攻略一款游戏时，发现这款游戏有一个可怕的无限循环。
如果要逃出这个循环，便需要回答n个问题。
这些问题的选项数量十分特殊。每个问题的选项数量与问题本身无关，而是和这个问题是第几个被回答的有关。
形式化的说法，如果当前还有i个问题需要被回答，那么游戏将为这个问题提供ci个选项, /*每个问题只有一个正确选项*/。
小X发现这个游戏还有一些神奇的特性。如果当前还有i个问题需要回答，如果回答正确，则继续回答下一个问题；
而如果回答错误，则游戏会从区间[i,n]随机生成一个需要回答问题的数量size，然后从n个问题中随机选择size个问题并打乱答案，让小X继续回答。
由于小X快进了不少剧情，他当然是不知道这些问题的正确答案的。
于是他写了一个程序来回答问题，也就是每次无脑选择第一个选项！
他想知道从开始(剩余n个问题)到剩余q个问题的状态，这个程序期望进行多少次选择。当然这个数字不一定是个整数，所以请告诉小X这个数字在mod 1'000'000'009意义下的值。
由于小X的程序存在未知bug，有时候会造成游戏的ci值修改。而你，需要回答修改后询问的值。

[输入格式]
第一行两个整数n，m，表示总问题数和小X的操作次数。
第二行n个整数c1-cn，表示初始状态的选项数目。
接下来m行，每行一个整数o，表示操作类型。
如果o = 1，表示这是一个询问操作，接下来一个整数q，表示询问从开始(剩余n个问题)到剩余q个问题的状态，这个程序期望进行多少次选择。
如果o = 2，接下来两个整数p，x，表示小X的程序出现Bug，将cp修改为x。

[输出格式]
对于每个询问操作，输出一行一个整数ansi，表示询问的答案。

[样例输入]

[样例输出]

[数据范围及提示]

难度与测试点顺序不一定相关。
所有选项数量ci均不超过模数。
时间限制3s，空间限制256mb。

[题解]
测试点1-2，我会手玩！(其实我是不知道怎么玩的)
测试点3，我会爆搜！(其实我是不知道怎么搜的)
测试点4-9，我会高斯消元+暴力重构！
测试点11-13，我会n^2递推+暴力重构！
测试点14-17&&21-22，我会O(n)递推+暴力重构！
测试点19-20，我会分块乱搞！
测试点23-25，我会线段树维护动态DP！
(因为那四个人也要考试，所以对不起了QAQ)

[数据构造]
直接随机就好，注意是否存在修改的限制。
注意5*5矩阵的信息合并需要125次标量乘法，注意循环顺序，注意优化取模。
总之，注意控制常数！
